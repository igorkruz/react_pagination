{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","firstPage","lastItem","length","className","classNames","href","onClick","map","page","isPageSelected","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","firstIndex","lastIndex","lastItemIndex","min","visibleItemsPerPage","slice","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAAuB,SAAC,GAK9B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAQX,EAAW,EADHY,KAAKC,KAAKN,EAAQC,IAGlCM,EAA4B,IAAhBL,EACZM,EAAWN,IAAgBE,EAAMK,OAcvC,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,CAAE,qBAAsBJ,IAAlD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACL,gBAAeL,EACfM,QApBe,WACjBX,EAAc,GAChBC,EAAaD,EAAc,IAazB,oBAWDE,EAAMU,KAAI,SAAAC,GACT,IAAMC,EAAiBd,IAAgBa,EAEvC,OACE,oBACEL,UAAWC,IAAW,CAAE,mBAAoBK,IAD9C,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVE,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAREA,MAcX,oBAAIL,UAAWC,IAAW,CAAE,qBAAsBH,IAAlD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVE,KAAK,QACL,gBAAeJ,EACfK,QA9Ce,WACjBX,EAAcE,EAAMK,QACtBN,EAAaD,EAAc,IAuCzB,wBChEFe,EAAQxB,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPqB,EAAU,WACrB,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,GAAcrB,EAAc,GAAKmB,EACjCG,EAAYD,EAAaF,EACzBI,EAAgBpB,KAAKqB,IAAIF,EAAWP,EAAMR,QAC1CkB,EAAsBV,EAAMW,MAAML,EAAYC,GASpD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAa,EAD9C,cACqDE,EADrD,eACyER,EAAMR,OAD/E,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOT,EACPU,SApBiB,SAACC,GAC1BV,GAAiBU,EAAMC,OAAOH,OAC9BV,EAAe,IAaT,SAjBc,CAAC,EAAG,EAAG,GAAI,IAwBRN,KAAI,SAAAoB,GAAM,OACvB,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOiB,EAAMR,OACbR,QAASoB,EACTnB,YAAaA,EACbC,aAAciB,IAGhB,6BACGO,EAAoBb,KAAI,SAAAsB,GAAI,OAC3B,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.27bf0ba8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void\n}\n\nexport const Pagination:FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesQuantity = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesQuantity);\n\n  const firstPage = currentPage === 1;\n  const lastItem = currentPage === pages.length;\n\n  const handleIncrease = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleDecrease = () => {\n    if (currentPage < pages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames({ 'page-item disabled': firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={handleIncrease}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => {\n        const isPageSelected = currentPage === page;\n\n        return (\n          <li\n            className={classNames({ 'page-item active': isPageSelected })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={classNames({ 'page-item disabled': lastItem })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastItem}\n          onClick={handleDecrease}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const firstIndex = (currentPage - 1) * itemsPerPage;\n  const lastIndex = firstIndex + itemsPerPage;\n  const lastItemIndex = Math.min(lastIndex, items.length);\n  const visibleItemsPerPage = items.slice(firstIndex, lastIndex);\n\n  const selectOptions = [3, 5, 10, 20];\n\n  const handleItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${lastItemIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPage}\n          >\n            {selectOptions.map(option => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItemsPerPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}